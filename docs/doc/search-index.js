var searchIndex = JSON.parse('{\
"rdf_rs":{"doc":"This crate provides the tools necessary to parse RDF …","t":[0,0,12,12,3,3,13,4,3,3,13,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,6,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,10,11,10,11,11,10,11,11,11,11,11,11,11,10,11],"n":["core","parsing","0","0","Graph","Literal","Literal","Object","Relationship","Resource","Resource","Triple","Uri","apply_metadata","base_prefix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","datatype","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","language","name","ne","ne","ne","ne","ne","ne","ne","new","object","predicate","prefix","prefixes","subject","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","triples","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uri_type","value","0","0","0","Parsed","ParserError","RDFParser","TurtleParser","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","from","from","from_file","from_file","graph","graph","into","into","object","object","relationship","relationship","resource","resource","to_string","triple","triple","try_from","try_from","try_into","try_into","type_id","type_id","uri","uri"],"q":["rdf_rs","","rdf_rs::core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rdf_rs::core::Object","","rdf_rs::parsing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Contains all of the core rdf data structures, such as <code>Uri</code> …","Contains the currently-implemented parsers and a base …","","","","","","","","","","An RDF triple. Typically constructed from a (<code>Resource</code>, …","","Expands all the URIs to have full paths for each resource.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Acts as a wrapper around <code>RDFParser::graph()</code> that …","Acts as a wrapper around <code>RDFParser::graph()</code> that …","","Parses a <code>Graph</code> from a string (typically a file).","","","","Parses an <code>Object</code> from a string.","","Parses a <code>Relationship</code> from a string. A wrapper around …","","Parses a <code>Resource</code> from a string. A wrapper around …","","","Parses a <code>Vec&lt;Triple&gt;</code> from a string.","","","","","","","","Parses a <code>Uri</code> from a string"],"i":[0,0,1,2,0,0,3,0,0,0,3,0,0,4,4,5,1,2,6,3,7,4,5,1,2,6,3,7,4,5,1,2,6,3,7,4,5,1,2,6,3,7,4,6,5,1,2,6,3,7,4,5,1,2,6,3,7,4,5,1,1,2,2,6,6,3,7,7,4,5,1,2,6,3,7,4,6,5,5,1,2,6,3,7,4,5,7,7,5,4,7,5,1,2,6,3,7,4,5,1,2,6,3,7,4,5,1,2,6,3,7,4,5,1,2,6,3,7,4,5,1,2,6,3,7,4,5,6,8,9,10,0,0,0,0,11,10,11,10,10,10,11,10,10,10,12,12,12,11,11,10,12,11,12,11,12,11,10,12,11,11,10,11,10,11,10,12,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["uri",3]],[[],["resource",3]],[[],["relationship",3]],[[],["literal",3]],[[],["object",4]],[[],["triple",3]],[[],["graph",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["uri",3]],["bool",15]],[[["resource",3]],["bool",15]],[[["relationship",3]],["bool",15]],[[["literal",3]],["bool",15]],[[["object",4]],["bool",15]],[[["triple",3]],["bool",15]],[[["graph",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["uri",3]]],[[]],[[["uri",3]]],[[["str",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["uri",3]],["bool",15]],[[["resource",3]],["bool",15]],[[["relationship",3]],["bool",15]],[[["literal",3]],["bool",15]],[[["object",4]],["bool",15]],[[["triple",3]],["bool",15]],[[["graph",3]],["bool",15]],[[["uritype",4],["str",15]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],[["parsed",6,["graph"]],["graph",3]]],[[["str",15]],[["parsed",6,["graph"]],["graph",3]]],[[["str",15]],[["parsed",6,["graph"]],["graph",3]]],[[["str",15]],[["parsed",6,["graph"]],["graph",3]]],[[]],[[]],[[["str",15]],[["object",4],["parsed",6,["object"]]]],[[["str",15]],[["object",4],["parsed",6,["object"]]]],[[["str",15]],[["parsed",6,["relationship"]],["relationship",3]]],[[["str",15]],[["parsed",6,["relationship"]],["relationship",3]]],[[["str",15]],[["parsed",6,["resource"]],["resource",3]]],[[["str",15]],[["parsed",6,["resource"]],["resource",3]]],[[],["string",3]],[[["str",15]],[["parsed",6,["vec"]],["vec",3,["triple"]]]],[[["str",15]],[["parsed",6,["vec"]],["vec",3,["triple"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["str",15]],[["parsed",6,["uri"]],["uri",3]]],[[["str",15]],[["parsed",6,["uri"]],["uri",3]]]],"p":[[3,"Resource"],[3,"Relationship"],[4,"Object"],[3,"Graph"],[3,"Uri"],[3,"Literal"],[3,"Triple"],[13,"Literal"],[13,"Resource"],[3,"ParserError"],[3,"TurtleParser"],[8,"RDFParser"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};